SET client_encoding = 'UTF8';

CREATE OR REPLACE FUNCTION gd_party_bu_qty_e()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
BEGIN
    UPDATE good_desc
        SET quantity = quantity + (NEW.qty - OLD.qty),
            quantity_reserved = quantity_reserved + (NEW.qty_reserved - OLD.qty_reserved)
        WHERE good_desc_id=NEW.gd_id;
    PERFORM service.log2file('  gd_party_bu_qty_e id=' || NEW.id
        || ' NEW.qty=' || NEW.qty
        || ' OLD.qty=' || OLD.qty
        || ' NEW.qty_doc=' || NEW.qty_doc);
    IF (NEW.qty > OLD.qty) THEN
        NEW.qty_doc := OLD.qty_doc + (NEW.qty - OLD.qty);
    END IF;
    RETURN NEW;
END;
$BODY$;

ALTER FUNCTION gd_party_bu_qty_e()
    OWNER TO postgres;

DROP TRIGGER IF EXISTS gd_party_bu_qty_e ON gd_party;

CREATE TRIGGER gd_party_bu_qty_e
    BEFORE UPDATE OF qty, qty_reserved
    ON gd_party
    FOR EACH ROW
    EXECUTE PROCEDURE gd_party_bu_qty_e();

-- vim: ft=pgsql
