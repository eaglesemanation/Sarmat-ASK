SET client_encoding = 'UTF8';

CREATE OR REPLACE FUNCTION command_inner_ad_e()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
DECLARE
    rr RECORD;
BEGIN
    FOR rr IN (
        SELECT * FROM robot
            WHERE OLD.id IN (
                coalesce(command_inner_assigned_id, 0),
                coalesce(command_inner_id, 0)
            )
    ) LOOP
        UPDATE robot SET
            state = 0, wait_for_problem_resolve = 0,
            command_inner_id = 0, command_inner_assigned_id = 0
            WHERE id = rr.id;
    END LOOP;
    RETURN OLD;
END;
$BODY$;

ALTER FUNCTION command_inner_ad_e()
    OWNER TO postgres;

DROP TRIGGER IF EXISTS command_inner_ad_e ON command_inner;

CREATE TRIGGER command_inner_ad_e
    AFTER DELETE
    ON command_inner
    FOR EACH ROW
    EXECUTE PROCEDURE command_inner_ad_e();

-- vim: ft=pgsql
