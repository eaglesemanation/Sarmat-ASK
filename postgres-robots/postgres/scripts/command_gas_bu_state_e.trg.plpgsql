CREATE OR REPLACE FUNCTION command_gas_bu_state_e()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
BEGIN
    NEW.state_ind := NEW.state;
    IF (NEW.state <> OLD.state) THEN
        IF (NEW.state = 1) THEN
            NEW.date_time_begin := LOCALTIMESTAMP;
        END IF;
        IF (NEW.state = 5) THEN
            NEW.date_time_end := LOCALTIMESTAMP;
        END IF;
    END IF;
    --------------------------
    -- Good.Out
    --------------------------
    IF (NEW.command_type_id = 12) THEN
        -- назначены все команды
        IF (NEW.state = 3) THEN
            UPDATE command_order
                SET state = 3
                WHERE command_gas_id = NEW.id
                    AND state < 3;
            /*   -- все подвезено
        elsif NEW.state=5 then
            update command_order
            set state=5
            where command_gas_id=NEW.id;*/
        END IF;
    END IF;
    RETURN NEW;
END;
$BODY$;

ALTER FUNCTION command_gas_bu_state_e()
    OWNER TO postgres;

DROP TRIGGER IF EXISTS command_gas_bu_state_e ON command_gas;

CREATE TRIGGER command_gas_bu_state_e
    BEFORE UPDATE OF state
    ON command_gas
    FOR EACH ROW
    EXECUTE PROCEDURE command_gas_bu_state_e();

-- vim: ft=pgsql
